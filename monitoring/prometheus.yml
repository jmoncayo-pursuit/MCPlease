# Prometheus configuration for MCPlease MCP Server monitoring
global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: mcplease-production
    environment: production

# Alerting rules
rule_files:
  - "prometheus-rules.yml"

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093

# Scrape configurations
scrape_configs:
  # MCP Server instances
  - job_name: 'mcplease-mcp'
    static_configs:
      - targets:
        - 'mcplease-mcp-1:8000'
        - 'mcplease-mcp-2:8000'
    metrics_path: '/metrics'
    scrape_interval: 15s
    scrape_timeout: 10s
    
    # Relabeling for better metric names
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        regex: '([^:]+):.*'
        replacement: '${1}'
      - source_labels: [__address__]
        target_label: node_id
        regex: 'mcplease-mcp-([0-9]+):.*'
        replacement: '${1}'
    
    # Health checks
    health_check:
      path: /health
      interval: 30s

  # HAProxy metrics
  - job_name: 'haproxy'
    static_configs:
      - targets: ['haproxy:8404']
    metrics_path: '/metrics'
    scrape_interval: 15s
    scrape_timeout: 10s
    
    # HAProxy stats endpoint
    metrics_path: '/stats;csv'
    honor_labels: true

  # Redis metrics
  - job_name: 'redis'
    static_configs:
      - targets: ['redis:6379']
    metrics_path: '/metrics'
    scrape_interval: 15s
    scrape_timeout: 10s

  # PostgreSQL metrics (if using postgres_exporter)
  - job_name: 'postgres'
    static_configs:
      - targets: ['postgres:5432']
    metrics_path: '/metrics'
    scrape_interval: 30s
    scrape_timeout: 10s

  # Node exporter (system metrics)
  - job_name: 'node'
    static_configs:
      - targets: ['localhost:9100']
    metrics_path: '/metrics'
    scrape_interval: 15s
    scrape_timeout: 10s

  # Prometheus self-monitoring
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
    metrics_path: '/metrics'
    scrape_interval: 15s
    scrape_timeout: 10s

  # Grafana metrics
  - job_name: 'grafana'
    static_configs:
      - targets: ['grafana:3000']
    metrics_path: '/metrics'
    scrape_interval: 30s
    scrape_timeout: 10s

  # Alertmanager metrics
  - job_name: 'alertmanager'
    static_configs:
      - targets: ['alertmanager:9093']
    metrics_path: '/metrics'
    scrape_interval: 30s
    scrape_timeout: 10s

  # Loki metrics
  - job_name: 'loki'
    static_configs:
      - targets: ['loki:3100']
    metrics_path: '/metrics'
    scrape_interval: 30s
    scrape_timeout: 10s

# Storage configuration
storage:
  tsdb:
    path: /prometheus
    retention:
      time: 30d
      size: 50GB
    wal:
      retention:
        time: 2h
        size: 10GB

# Recording rules for common queries
recording_rules:
  - record: 'mcplease:requests_total'
    expr: 'sum(rate(mcplease_http_requests_total[5m])) by (instance, method, endpoint)'
  
  - record: 'mcplease:response_time_seconds'
    expr: 'histogram_quantile(0.95, sum(rate(mcplease_http_request_duration_seconds_bucket[5m])) by (instance, le))'
  
  - record: 'mcplease:error_rate'
    expr: 'sum(rate(mcplease_http_requests_total{status=~"4..|5.."}[5m])) by (instance) / sum(rate(mcplease_http_requests_total[5m])) by (instance)'
  
  - record: 'mcplease:active_connections'
    expr: 'sum(mcplease_connections_active) by (instance)'
  
  - record: 'mcplease:memory_usage_bytes'
    expr: 'sum(mcplease_memory_usage_bytes) by (instance)'
  
  - record: 'mcplease:cpu_usage_percent'
    expr: 'sum(mcplease_cpu_usage_percent) by (instance)'

# Global scrape timeout
scrape_timeout: 10s

# Global evaluation timeout
evaluation_timeout: 10s
